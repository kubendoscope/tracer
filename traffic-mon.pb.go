// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.6.1
// source: traffic-mon.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Address structure as defined in your Go struct
type UprobeAddressInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Family        uint32                 `protobuf:"varint,1,opt,name=family,proto3" json:"family,omitempty"`
	Saddr4        uint32                 `protobuf:"varint,2,opt,name=saddr4,proto3" json:"saddr4,omitempty"`
	Daddr4        uint32                 `protobuf:"varint,3,opt,name=daddr4,proto3" json:"daddr4,omitempty"`
	Saddr6        []byte                 `protobuf:"bytes,4,opt,name=saddr6,proto3" json:"saddr6,omitempty"` // 16 bytes
	Daddr6        []byte                 `protobuf:"bytes,5,opt,name=daddr6,proto3" json:"daddr6,omitempty"` // 16 bytes
	Sport         uint32                 `protobuf:"varint,6,opt,name=sport,proto3" json:"sport,omitempty"`  // uint16 in Go, but uint32 here to avoid wire truncation
	Dport         uint32                 `protobuf:"varint,7,opt,name=dport,proto3" json:"dport,omitempty"`  // same as above
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UprobeAddressInfo) Reset() {
	*x = UprobeAddressInfo{}
	mi := &file_traffic_mon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UprobeAddressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UprobeAddressInfo) ProtoMessage() {}

func (x *UprobeAddressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_mon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UprobeAddressInfo.ProtoReflect.Descriptor instead.
func (*UprobeAddressInfo) Descriptor() ([]byte, []int) {
	return file_traffic_mon_proto_rawDescGZIP(), []int{0}
}

func (x *UprobeAddressInfo) GetFamily() uint32 {
	if x != nil {
		return x.Family
	}
	return 0
}

func (x *UprobeAddressInfo) GetSaddr4() uint32 {
	if x != nil {
		return x.Saddr4
	}
	return 0
}

func (x *UprobeAddressInfo) GetDaddr4() uint32 {
	if x != nil {
		return x.Daddr4
	}
	return 0
}

func (x *UprobeAddressInfo) GetSaddr6() []byte {
	if x != nil {
		return x.Saddr6
	}
	return nil
}

func (x *UprobeAddressInfo) GetDaddr6() []byte {
	if x != nil {
		return x.Daddr6
	}
	return nil
}

func (x *UprobeAddressInfo) GetSport() uint32 {
	if x != nil {
		return x.Sport
	}
	return 0
}

func (x *UprobeAddressInfo) GetDport() uint32 {
	if x != nil {
		return x.Dport
	}
	return 0
}

// Event structure matching your uprobeGoTlsEvent
type GoTlsEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Goid          uint64                 `protobuf:"varint,1,opt,name=goid,proto3" json:"goid,omitempty"`
	TsNs          uint64                 `protobuf:"varint,2,opt,name=ts_ns,json=tsNs,proto3" json:"ts_ns,omitempty"`
	Fd            uint32                 `protobuf:"varint,3,opt,name=fd,proto3" json:"fd,omitempty"`
	Pid           uint32                 `protobuf:"varint,4,opt,name=pid,proto3" json:"pid,omitempty"`
	Tid           uint32                 `protobuf:"varint,5,opt,name=tid,proto3" json:"tid,omitempty"`
	AddressInfo   *UprobeAddressInfo     `protobuf:"bytes,6,opt,name=address_info,json=addressInfo,proto3" json:"address_info,omitempty"`
	DataLen       int32                  `protobuf:"varint,7,opt,name=data_len,json=dataLen,proto3" json:"data_len,omitempty"`
	EventType     uint32                 `protobuf:"varint,8,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Comm          string                 `protobuf:"bytes,9,opt,name=comm,proto3" json:"comm,omitempty"`  // Should be extracted from [16]int8
	Data          []byte                 `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"` // event.Data[0:event.DataLen]
	Uid           string                 `protobuf:"bytes,11,opt,name=uid,proto3" json:"uid,omitempty"`
	Node          string                 `protobuf:"bytes,12,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoTlsEvent) Reset() {
	*x = GoTlsEvent{}
	mi := &file_traffic_mon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoTlsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoTlsEvent) ProtoMessage() {}

func (x *GoTlsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_mon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoTlsEvent.ProtoReflect.Descriptor instead.
func (*GoTlsEvent) Descriptor() ([]byte, []int) {
	return file_traffic_mon_proto_rawDescGZIP(), []int{1}
}

func (x *GoTlsEvent) GetGoid() uint64 {
	if x != nil {
		return x.Goid
	}
	return 0
}

func (x *GoTlsEvent) GetTsNs() uint64 {
	if x != nil {
		return x.TsNs
	}
	return 0
}

func (x *GoTlsEvent) GetFd() uint32 {
	if x != nil {
		return x.Fd
	}
	return 0
}

func (x *GoTlsEvent) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *GoTlsEvent) GetTid() uint32 {
	if x != nil {
		return x.Tid
	}
	return 0
}

func (x *GoTlsEvent) GetAddressInfo() *UprobeAddressInfo {
	if x != nil {
		return x.AddressInfo
	}
	return nil
}

func (x *GoTlsEvent) GetDataLen() int32 {
	if x != nil {
		return x.DataLen
	}
	return 0
}

func (x *GoTlsEvent) GetEventType() uint32 {
	if x != nil {
		return x.EventType
	}
	return 0
}

func (x *GoTlsEvent) GetComm() string {
	if x != nil {
		return x.Comm
	}
	return ""
}

func (x *GoTlsEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoTlsEvent) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GoTlsEvent) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

// Acknowledgement from the server
type StreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamResponse) Reset() {
	*x = StreamResponse{}
	mi := &file_traffic_mon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamResponse) ProtoMessage() {}

func (x *StreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_traffic_mon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamResponse.ProtoReflect.Descriptor instead.
func (*StreamResponse) Descriptor() ([]byte, []int) {
	return file_traffic_mon_proto_rawDescGZIP(), []int{2}
}

func (x *StreamResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_traffic_mon_proto protoreflect.FileDescriptor

const file_traffic_mon_proto_rawDesc = "" +
	"\n" +
	"\x11traffic-mon.proto\x12\atraffic\"\xb7\x01\n" +
	"\x11UprobeAddressInfo\x12\x16\n" +
	"\x06family\x18\x01 \x01(\rR\x06family\x12\x16\n" +
	"\x06saddr4\x18\x02 \x01(\rR\x06saddr4\x12\x16\n" +
	"\x06daddr4\x18\x03 \x01(\rR\x06daddr4\x12\x16\n" +
	"\x06saddr6\x18\x04 \x01(\fR\x06saddr6\x12\x16\n" +
	"\x06daddr6\x18\x05 \x01(\fR\x06daddr6\x12\x14\n" +
	"\x05sport\x18\x06 \x01(\rR\x05sport\x12\x14\n" +
	"\x05dport\x18\a \x01(\rR\x05dport\"\xb0\x02\n" +
	"\n" +
	"GoTlsEvent\x12\x12\n" +
	"\x04goid\x18\x01 \x01(\x04R\x04goid\x12\x13\n" +
	"\x05ts_ns\x18\x02 \x01(\x04R\x04tsNs\x12\x0e\n" +
	"\x02fd\x18\x03 \x01(\rR\x02fd\x12\x10\n" +
	"\x03pid\x18\x04 \x01(\rR\x03pid\x12\x10\n" +
	"\x03tid\x18\x05 \x01(\rR\x03tid\x12=\n" +
	"\faddress_info\x18\x06 \x01(\v2\x1a.traffic.UprobeAddressInfoR\vaddressInfo\x12\x19\n" +
	"\bdata_len\x18\a \x01(\x05R\adataLen\x12\x1d\n" +
	"\n" +
	"event_type\x18\b \x01(\rR\teventType\x12\x12\n" +
	"\x04comm\x18\t \x01(\tR\x04comm\x12\x12\n" +
	"\x04data\x18\n" +
	" \x01(\fR\x04data\x12\x10\n" +
	"\x03uid\x18\v \x01(\tR\x03uid\x12\x12\n" +
	"\x04node\x18\f \x01(\tR\x04node\"(\n" +
	"\x0eStreamResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2R\n" +
	"\x10TrafficCollector\x12>\n" +
	"\fStreamEvents\x12\x13.traffic.GoTlsEvent\x1a\x17.traffic.StreamResponse(\x01B\tZ\a./;mainb\x06proto3"

var (
	file_traffic_mon_proto_rawDescOnce sync.Once
	file_traffic_mon_proto_rawDescData []byte
)

func file_traffic_mon_proto_rawDescGZIP() []byte {
	file_traffic_mon_proto_rawDescOnce.Do(func() {
		file_traffic_mon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_traffic_mon_proto_rawDesc), len(file_traffic_mon_proto_rawDesc)))
	})
	return file_traffic_mon_proto_rawDescData
}

var file_traffic_mon_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_traffic_mon_proto_goTypes = []any{
	(*UprobeAddressInfo)(nil), // 0: traffic.UprobeAddressInfo
	(*GoTlsEvent)(nil),        // 1: traffic.GoTlsEvent
	(*StreamResponse)(nil),    // 2: traffic.StreamResponse
}
var file_traffic_mon_proto_depIdxs = []int32{
	0, // 0: traffic.GoTlsEvent.address_info:type_name -> traffic.UprobeAddressInfo
	1, // 1: traffic.TrafficCollector.StreamEvents:input_type -> traffic.GoTlsEvent
	2, // 2: traffic.TrafficCollector.StreamEvents:output_type -> traffic.StreamResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_traffic_mon_proto_init() }
func file_traffic_mon_proto_init() {
	if File_traffic_mon_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_traffic_mon_proto_rawDesc), len(file_traffic_mon_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_traffic_mon_proto_goTypes,
		DependencyIndexes: file_traffic_mon_proto_depIdxs,
		MessageInfos:      file_traffic_mon_proto_msgTypes,
	}.Build()
	File_traffic_mon_proto = out.File
	file_traffic_mon_proto_goTypes = nil
	file_traffic_mon_proto_depIdxs = nil
}
